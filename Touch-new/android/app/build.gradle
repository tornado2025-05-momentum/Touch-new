apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e.// android/app/build.gradle  — 完成例（Groovy DSL）

plugins {
    id "com.android.application"
    id "com.facebook.react"
    id "com.google.gms.google-services"   // Firebase 用
    // id "kotlin-android"                // Kotlin を自前で使う場合のみ
}

android {
    namespace "com.momentum"              // ← パッケージ名に合わせて変更可
    compileSdkVersion 34

    defaultConfig {
        applicationId "com.momentum"      // ← あなたのアプリID
        minSdkVersion 23
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"

        // 位置情報を正確に取得する端末で必要になる場合がある
        // missingDimensionStrategy 'react-native-camera', 'general'  // 例: 特定ライブラリ用
    }

    // リリース署名（デバッグは自動署名）
    signingConfigs {
        release {
            // keystore の設定を使う場合はここに記述
            // storeFile file(System.getenv("MYAPP_RELEASE_STORE_FILE"))
            // storePassword System.getenv("MYAPP_RELEASE_STORE_PASSWORD")
            // keyAlias System.getenv("MYAPP_RELEASE_KEY_ALIAS")
            // keyPassword System.getenv("MYAPP_RELEASE_KEY_PASSWORD")
        }
    }

    buildTypes {
        debug {
            // デフォルトでOK
        }
        release {
            // 署名設定を使う場合は有効化
            // signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    // NDK を使わない場合はそのまま
    packagingOptions {
        // Firebase/Play Services で競合しやすいメタ情報を除外
        exclude("META-INF/**")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    // Hermes は gradle.properties の設定を優先（デフォルトで有効）
    buildFeatures {
        buildConfig true
    }
}

// React Native Gradle Plugin の設定（必要ならカスタム）
react {
    // hermesEnabled は gradle.properties (newArchEnabled/ hermesEnabled) を使用
    // bundleInDebug = false
}

dependencies {
    // React Native 本体（プラグインが自動解決）
    implementation "com.facebook.react:react-android"

    // --- 位置情報（GPS/Fused Location） ---
    implementation "com.google.android.gms:play-services-location:21.3.0"

    // --- Firebase ---
    // BOMでバージョンを一括管理（数字は適宜最新へ）
    implementation platform("com.google.firebase:firebase-bom:33.3.0")
    implementation "com.google.firebase:firebase-firestore"
    implementation "com.google.firebase:firebase-auth"

    // （必要なら）Analytics 等を追加
    // implementation "com.google.firebase:firebase-analytics"

    // （背景タスクを使うなら）react-native-background-actions は npm 側でOK
    // Java 依存は不要
}
 where "package.json" lives. Default is '../..'
    // root = file("../../")
    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native
    // reactNativeDir = file("../../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen
    // codegenDir = file("../../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../../node_modules/react-native/cli.js
    // cliFile = file("../../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]

    /* Autolinking */
    autolinkLibrariesWithApp()
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = io.github.react-native-community:jsc-android-intl:2026004.+`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

plugins {
    id "com.android.application"
    id "com.facebook.react"
    id "com.google.gms.google-services" // ← 追加
}

android {
    namespace "com.momentum"              // ← パッケージ名に合わせて変更可
    compileSdkVersion 34

    defaultConfig {
        applicationId "com.momentum"      // ← あなたのアプリID
        minSdkVersion 23
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"

        // 位置情報を正確に取得する端末で必要になる場合がある
        // missingDimensionStrategy 'react-native-camera', 'general'  // 例: 特定ライブラリ用
    }

    // リリース署名（デバッグは自動署名）
    signingConfigs {
        release {
            // keystore の設定を使う場合はここに記述
            // storeFile file(System.getenv("MYAPP_RELEASE_STORE_FILE"))
            // storePassword System.getenv("MYAPP_RELEASE_STORE_PASSWORD")
            // keyAlias System.getenv("MYAPP_RELEASE_KEY_ALIAS")
            // keyPassword System.getenv("MYAPP_RELEASE_KEY_PASSWORD")
        }
    }

    buildTypes {
        debug {
            // デフォルトでOK
        }
        release {
            // 署名設定を使う場合は有効化
            // signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    // NDK を使わない場合はそのまま
    packagingOptions {
        // Firebase/Play Services で競合しやすいメタ情報を除外
        exclude("META-INF/**")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    // Hermes は gradle.properties の設定を優先（デフォルトで有効）
    buildFeatures {
        buildConfig true
    }
}

// React Native Gradle Plugin の設定（必要ならカスタム）
react {
    // hermesEnabled は gradle.properties (newArchEnabled/ hermesEnabled) を使用
    // bundleInDebug = false
}

dependencies {
    // React Native 本体（プラグインが自動解決）
    implementation "com.facebook.react:react-android"

    // --- 位置情報（GPS/Fused Location） ---
    implementation "com.google.android.gms:play-services-location:21.3.0"

    // --- Firebase ---
    // BOMでバージョンを一括管理（数字は適宜最新へ）
    implementation platform("com.google.firebase:firebase-bom:33.3.0")
    implementation "com.google.firebase:firebase-firestore"
    implementation "com.google.firebase:firebase-auth"

    // （必要なら）Analytics 等を追加
    // implementation "com.google.firebase:firebase-analytics"

    // （背景タスクを使うなら）react-native-background-actions は npm 側でOK
    // Java 依存は不要
}
apply plugin: 'com.google.gms.google-services'